generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  CANCELLED
  SENT
  DELIVERED
}

enum PaymentMethod {
  CREDIT_CARD
  DEBIT_CARD
  PIX
  CASH
  BILLET
}

model User {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  name         String?
  profile_url  String?
  phone        String?
  cpf          String?
  password     String?
  google_id    String?
  birth_date   DateTime?
  is_admin     Boolean      @default(false)
  created_at   DateTime     @default(now())
  updated_at   DateTime     @default(now()) @updatedAt
  orders       Order[]
  address      Address[]
  cart         Cart?
  used_coupons UsedCoupon[]
  Avaliation   Avaliation[]
}

model UsedCoupon {
  id         Int      @id @default(autoincrement())
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
  coupon_id  Int
  coupon     Coupon   @relation(fields: [coupon_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model Coupon {
  id         Int          @id @default(autoincrement())
  code       String       @unique
  discount   Int
  is_active  Boolean      @default(true)
  created_at DateTime     @default(now())
  updated_at DateTime     @default(now()) @updatedAt
  used       UsedCoupon[]
  Order      Order[]
}

model Order {
  id                Int           @id @default(autoincrement())
  user_id           Int
  user              User          @relation(fields: [user_id], references: [id])
  address_id        Int
  address           Address       @relation(fields: [address_id], references: [id])
  subtotal          Int
  delivery_fee      Int
  customization_fee Int
  total             Int
  tracking_number   String?
  status            OrderStatus   @default(PENDING)
  cancelled_reason  String?
  payment_method    PaymentMethod
  payment_id        String?
  installments      Int?
  coupon_id         Int?
  cupom             Coupon?       @relation(fields: [coupon_id], references: [id])
  created_at        DateTime      @default(now())
  updated_at        DateTime      @default(now()) @updatedAt
  order_items       OrderItem[]
}

model Address {
  id           Int      @id @default(autoincrement())
  user_id      Int
  user         User     @relation(fields: [user_id], references: [id])
  zip_code     String
  state        String
  city         String
  neighborhood String
  street       String
  number       String
  complement   String?
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now()) @updatedAt
  Order        Order[]
}

model OrderItem {
  id                   Int            @id @default(autoincrement())
  order_id             Int
  order                Order          @relation(fields: [order_id], references: [id])
  product_variant_id   Int
  product_variant      ProductVariant @relation(fields: [product_variant_id], references: [id])
  price                Int
  quantity             Int
  customization        Boolean
  customization_name   String?
  customization_number Int?
  customization_price  Int?
  created_at           DateTime       @default(now())
  updated_at           DateTime       @default(now()) @updatedAt
}

model Cart {
  id         Int        @id @default(autoincrement())
  user_id    Int        @unique
  user       User       @relation(fields: [user_id], references: [id])
  created_at DateTime   @default(now())
  updated_at DateTime   @default(now()) @updatedAt
  cart_items CartItem[]
}

model CartItem {
  id                   Int            @id @default(autoincrement())
  cart_id              Int
  cart                 Cart           @relation(fields: [cart_id], references: [id])
  product_variant_id   Int
  product_variant      ProductVariant @relation(fields: [product_variant_id], references: [id])
  quantity             Int
  customization        Boolean
  customization_name   String?
  customization_number Int?
  created_at           DateTime       @default(now())
  updated_at           DateTime       @default(now()) @updatedAt
}

model Product {
  id          Int              @id @default(autoincrement())
  name        String
  description String?
  base_price  Int
  trending    Boolean          @default(false)
  discount    Int?
  team_id     Int
  sold        Int              @default(0)
  team        Team             @relation(fields: [team_id], references: [id])
  is_active   Boolean          @default(true)
  created_at  DateTime         @default(now())
  updated_at  DateTime         @default(now()) @updatedAt
  variants    ProductVariant[]
  images      ProductImage[]
  filters     ProductFilter[]
  avaliations Avaliation[]
}

model Team {
  id         Int       @id @default(autoincrement())
  name       String
  url        String?
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  products   Product[]
}

model ProductVariant {
  id         Int         @id @default(autoincrement())
  product_id Int
  product    Product     @relation(fields: [product_id], references: [id])
  name       String
  is_active  Boolean     @default(true)
  created_at DateTime    @default(now())
  updated_at DateTime    @default(now()) @updatedAt
  order_item OrderItem[]
  cart_item  CartItem[]
}

model ProductImage {
  id         Int      @id @default(autoincrement())
  product_id Int
  product    Product  @relation(fields: [product_id], references: [id])
  url        String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model ProductFilter {
  id         Int      @id @default(autoincrement())
  product_id Int
  product    Product  @relation(fields: [product_id], references: [id])
  filter_id  Int
  filter     Filter   @relation(fields: [filter_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model Filter {
  id          Int             @id @default(autoincrement())
  name        String
  category_id Int
  category    Category        @relation(fields: [category_id], references: [id])
  created_at  DateTime        @default(now())
  updated_at  DateTime        @default(now()) @updatedAt
  products    ProductFilter[]
}

model Category {
  id         Int      @id @default(autoincrement())
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  filters    Filter[]
  section_id Int      @unique
  section    Section? @relation(fields: [section_id], references: [id])
}

model Section {
  id         Int       @id @default(autoincrement())
  name       String
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  category   Category?
}

model Avaliation {
  id         Int      @id @default(autoincrement())
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
  product_id Int
  product    Product  @relation(fields: [product_id], references: [id])
  rating     Int
  comment    String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model Config {
  id                Int       @id @default(autoincrement())
  instagram         String
  facebook          String
  twitter           String
  whatsapp          String
  tiktok            String
  email             String
  phone             String
  cnpj              String
  customization_fee Int
  delivery_fee      Int
  free_shipping     Boolean
  installment_limit Int
  created_at        DateTime  @default(now())
  updated_at        DateTime  @default(now()) @updatedAt
  tags              Tag[]
  banners           Banner[]
  articles          Article[]
}

model Tag {
  id         Int      @id @default(autoincrement())
  name       String
  icon       String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  config_id  Int
  config     Config   @relation(fields: [config_id], references: [id])
}

model Banner {
  id         Int      @id @default(autoincrement())
  image      String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  config_id  Int
  config     Config   @relation(fields: [config_id], references: [id])
}

model Article {
  id         Int      @id @default(autoincrement())
  image      String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  config_id  Int
  config     Config   @relation(fields: [config_id], references: [id])
}
